@using MySql.Data.MySqlClient
@using System.Text.Json.Nodes
@model MajorTrackingSheet
@functions {
    public List<string?[]> GetAreas()
    {
        List<string?[]> retList = new();
        using (MySqlConnection con = new("server=localhost,3306;database=advising;user=root;password=password;"))
        {
            using MySqlCommand cmd = new("SELECT * FROM studyarea");
            cmd.Connection = con;
            con.Open();
            using (MySqlDataReader sdr = cmd.ExecuteReader())
            {
                while (sdr.Read())
                {
                    retList.Add(new string?[] { sdr["studyarea"].ToString(), sdr["longname"].ToString() });
                }
            }
            con.Close();
        }
        return retList;
    }
}
<link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
<form asp-action="AddSheet" class="form-horizontal">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label class="control-label">Area</label>
        <select asp-for="AREA" class="form-control ar">
            @foreach (var prop in GetAreas())
            {
                <option value=@prop[0]>@prop[1]</option>
            }
        </select>
        <span asp-validation-for="AREA" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="PHYSED" value=4 />
        <span asp-validation-for="PHYSED" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="IQP" value=3 />
        <span asp-validation-for="IQP" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="MQP" value=3 />
        <span asp-validation-for="MQP" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="HUA" value=6 />
        <span asp-validation-for="HUA" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="ELECT" value=4 />
        <span asp-validation-for="ELECT" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="SOCSCI" value=2 />
        <span asp-validation-for="SOCSCI" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="SECT" class="sect" hidden />
        <div class="courseSect">
            <div class="sectInput">
                <select class="areaCourseSelect">
                    @foreach (var prop in GetAreas())
                    {
                        <option value=@prop[0]>@prop[1]</option>
                    }
                </select>
                <input class="one csel" placeholder="1K Level" value="0" type="number" min=0 onchange="getSectionInput()" onkeyup="getSectionInput()" />
                <input class="two csel" placeholder="2K Level" value="0" type="number" min=0 onchange="getSectionInput()" onkeyup="getSectionInput()" />
                <input class="three csel" placeholder="3K Level" value="0" type="number" min=0 onchange="getSectionInput()" onkeyup="getSectionInput()" />
                <input class="four csel" placeholder="4K Level" value="0" type="number" min=0 onchange="getSectionInput()" onkeyup="getSectionInput()" />
                <input class="five csel" placeholder="5K Level" value="0" type="number" min=0 onchange="getSectionInput()" onkeyup="getSectionInput()" />
            </div>
        </div>
        <span asp-validation-for="SECT" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="REQ" class="req" hidden />
        <span asp-validation-for="REQ" class="text-danger"></span>
    </div>
    <div class="form-group">
        <div class="reqCourses">
        </div>
    </div>
    <div>
        <button type="submit" class="submit" value="Submit">Submit</button>
        <button type="button" class="add" onclick="addInput()">Add another section</button>
        <button type="button" class="add" onclick="addCourse()">Add required Course</button>
    </div>
</form>
<script>
    function addCourse() {
        var div = document.createElement("div");
        div.classList.add("reqCourse");
        var select = document.createElement("select");
        select.classList.add("area");
        select.onchange = function () {
            getSectionInput();
        }
        var input = document.createElement("input");
        input.classList.add("id");
        input.type = "number";
        input.placeholder = "Course ID";
        input.onchange = function () {
            getSectionInput();
        }
        input.onkeyup = function () {
            getSectionInput();
        }
        document.querySelector(".areaCourseSelect").querySelectorAll("option").forEach(t => {
            var copy = t.cloneNode();
            copy.innerHTML = t.innerHTML;
            select.appendChild(copy);
        });
        var removeButton = document.createElement("button");
        removeButton.type = "button";
        removeButton.classList.add("remove");
        removeButton.onclick = function () {
            removeButton.parentElement.remove();
        }
        removeButton.innerHTML = "X";
        div.appendChild(select);
        div.appendChild(input);
        div.appendChild(removeButton);
        document.querySelector(".reqCourses").appendChild(div);
    }
    function intToDefault(num) {
        switch (num) {
            case 1:
                return "1K Level";
            case 2:
                return "2K Level";
            case 3:
                return "3K Level";
            case 4:
                return "4K Level";
            case 5:
                return "5K Level";
            default:
                return "";
        }
    }
    function intToString(num) {
        switch (num) {
            case 1:
                return "one";
            case 2:
                return "two";
            case 3:
                return "three";
            case 4:
                return "four";
            case 5:
                return "five";
            default:
                return "";
        }
    }
    function getSectionInput() {
        var value = {};
        document.querySelector(".courseSect").querySelectorAll(".sectInput").forEach(t => {
            var obj = {};
            var i = 1;
            t.querySelectorAll(".csel").forEach(k => {
                obj[i] = k.value;
                i++;
            });
            value[t.querySelector(".areaCourseSelect").value] = obj;
        });
        document.querySelector(".sect").value = JSON.stringify(value);
        var req = {};
        var j = 0;
        document.querySelectorAll(".reqCourse").forEach(t => {
            req[j++] = {
                "id": t.querySelector(".reqId").value,
                "area": t.querySelector(".reqArea").value
            };
        });
        document.querySelector(".req").value = JSON.stringify(req);
    }
    function addInput() {
        var div = document.createElement("div");
        div.classList.add("sectInput");
        var select = document.createElement("select");
        select.classList.add("areaCourseSelect");
        var def = document.querySelector(".areaCourseSelect").querySelectorAll("option").forEach(t => {
            var copy = t.cloneNode();
            copy.innerHTML = t.innerHTML;
            select.appendChild(copy);
        });
        div.appendChild(select);
        for (let i = 1; i <= 5; i++) {
            var input = document.createElement("input");
            input.classList.add("csel");
            input.classList.add("csele");
            input.classList.add(intToString(i));
            input.placeholder = intToDefault(i);
            input.type = "number";
            input.min = 0;
            input.onchange = function () {
                getSectionInput();
            }
            input.onkeyup = function () {
                getSectionInput();
            }
            div.appendChild(input);
        }
        var removeButton = document.createElement("button");
        removeButton.type = "button";
        removeButton.classList.add("remove");
        removeButton.onclick = function () {
            removeButton.parentElement.remove();
        }
        removeButton.innerHTML = "X";
        div.appendChild(removeButton);
        document.querySelector(".courseSect").appendChild(div);
    }
</script>